[{"name": "app.py", "content": "# --------------------------------------------\n# Imports at the top - PyShiny EXPRESS VERSION\n# --------------------------------------------\n\n# From shiny, import just reactive and render\nfrom shiny import reactive, render\n\n# From shiny.express, import just ui and inputs if needed\nfrom shiny.express import ui\n\nimport random\nfrom datetime import datetime\nfrom collections import deque\nimport pandas as pd\nimport plotly.express as px\nfrom shinywidgets import render_plotly\nfrom scipy import stats\nimport seaborn as sns\n\n# --------------------------------------------\n\n\n\n\nDEQUE_SIZE: int = 5\nreactive_value_wrapper = reactive.value(deque(maxlen=DEQUE_SIZE))\n\nMAX_DEQUE_SIZE = 20\n# --------------------------------------------\n# Initialize a REACTIVE CALC that all display components can call\n# to get the latest data and display it.\n# The calculation is invalidated every UPDATE_INTERVAL_SECS\n# to trigger updates.\n# It returns a tuple with everything needed to display the data.\n# Very easy to expand or modify.\n# --------------------------------------------\n\nimpaired_df = pd.read_csv(\"impaired.csv\")\n\n\n\n@reactive.calc()\ndef reactive_calc_combined():\n\n\n    # Data generation logic\n    deaths = round(random.uniform(0, 8), 1)\n    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    new_dictionary_entry = {\"deaths\":deaths, \"timestamp\":timestamp}\n\n    # get the deque and append the new entry\n    reactive_value_wrapper.get().append(new_dictionary_entry)\n\n    # Get a snapshot of the current deque for any further processing\n    deque_snapshot = reactive_value_wrapper.get()\n\n    # For Display: Convert deque to DataFrame for display\n    df = impaired_df\n\n    # For Display: Get the latest dictionary entry\n    latest_dictionary_entry = new_dictionary_entry\n\n    # Return a tuple with everything we need\n    # Every time we call this function, we'll get all these values\n    return deque_snapshot, df, latest_dictionary_entry\n\n\n\n\n# Define the Shiny UI Page layout\n# Call the ui.page_opts() function\n# Set title to a string in quotes that will appear at the top\n# Set fillable to True to use the whole page width for the UI\nui.page_opts(title=\"Impaired Driving Deaths - Blehman\", fillable=True)\n\n# Sidebar is typically used for user interaction/information\n# Note the with statement to create the sidebar followed by a colon\n# Everything in the sidebar is indented consistently\nwith ui.sidebar(open=\"open\"):\n\n\n    ui.h1(\"Impaired Driving Death Rates\", class_=\"text-center\", style=\"color:blue\")\n    ui.p(\n        \"by Age and Gender, 2012 & 2014, All States.\",\n        class_=\"text-center\", style=\"color:green\",\n    )\n    ui.hr()\n\n    ui.h2(\"Sidebar\")\n    ui.input_date_range(\"daterange\", \"Date range\", start=\"2011-01-01\", end=\"2014-12-31\")\n    \n    ui.input_checkbox_group(  \n    \"State\",\n    \"select state\",  \n    [\"Kentucky\", \"Alabama\", \"Ohio\"],\n    inline=True,\n)\n\n    ui.hr()\n\n    ui.h3(\"Links:\", style=\"text-decoration: underline\")\n    ui.a(\n        \"CDC Data - Impaired Driving Death Rates\",\n        href=\"https://data.cdc.gov/Motor-Vehicle/Impaired-Driving-Death-Rate-by-Age-and-Gender-2012/ebbj-sh54/about_data\",\n        target=\"_blank\",\n    )\n    ui.a(\n        \"GitHub App - Lehman\",\n        href=\"https://brennanlehman.github.io/cintel-05-cintel/\",\n        target=\"_blank\",\n\n    )\n# In Shiny Express, everything not in the sidebar is in the main panel\n\nwith ui.layout_columns():\n    with ui.value_box(\n        theme= \"\"\"\n            bg-primary\n            text-light\n            border-primary\"\"\",\n    ):\n\n        \"Impaired Driving Death Rates\"\n\n        @render.text\n        def display_temp():\n            \"\"\"Get the latest reading and return a death string\"\"\"\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n            return f\"{latest_dictionary_entry['deaths']}\"\n\n      \n\n\n\n#with ui.card(full_screen=True, min_height=\"100%\"):\nwith ui.card(full_screen=True, style=\"background-color: lightgray;\", height=350):\n    ui.card_header(\"Impaired Deaths Data Frame\")\n\n    @render.data_frame\n    def display_df():\n        \"\"\"Get the latest reading and return a dataframe with current readings\"\"\"\n        deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n        pd.set_option('display.width', None)        # Use maximum width\n        return render.DataGrid(df, width=\"100%\", height=\"100%\")\n\n\nwith ui.card(full_screen=True, style=\"background-color: lightgray;\", height=350):\n        ui.card_header(\"State Seaborn historgram\")\n\n        @render.plot(alt=\"A Seaborn histogram on Death Rates.\")  \n        def plot():  \n            ax = sns.histplot(data=impaired_df, x=\"Female, 2012\", y=\"State\")  \n            ax.set_title(\"Female Death Rates, 2012\")\n            ax.set_xlabel(\"Count\")\n            ax.set_ylabel(\"null\")\n            return ax \n", "type": "text"}, {"name": "impaired.csv", "content": "State, Location,\"All Ages, 2012\",\"All Ages, 2014\",\"Ages 0-20, 2012\",\"Ages 0-20, 2014\",\"Ages 21-34, 2012\",\"Ages 21-34, 2014\",\"Ages 35+, 2012\",\"Ages 35+, 2014\",\"Male, 2012\",\"Male, 2014\",\"Female, 2012\",\"Female, 2014\"\nConnecticut,\"Connecticut\n(41.562661, -72.64984)\",2.4,2.7,,,5.9,6.1,2.1,2.5,3.7,4.6,1.1,\nKentucky,\"Kentucky\n(37.645973, -84.774968)\",4,3.9,1.8,2,7.2,7.8,3.7,3.4,6.5,6.5,1.5,1.3\nSouth Dakota,\"South Dakota\n(44.35313, -100.373529)\",5.7,5.6,,,,,,6.2,7.4,8.7,,\nOklahoma,\"Oklahoma\n(35.472031, -97.521068)\",5.6,4,,,10.5,7.4,5.8,3.9,9.300000000000001,6,1.9,2.1\nWest Virginia,\"West, Virginia\n(38.665511, -80.712638)\",5.6,4.7,,,12.9,10,4.4,4,9.300000000000001,7.1,,\nVirginia,\"Virginia\n(37.542681, -78.457889)\",2.5,2.5,1.2,1.2,4.5,5.1,2.6,2.3,4.1,3.9,0.9,1.2\nIowa,\"Iowa\n(42.469401, -93.816487)\",3.2,3,,,5.9,4.6,2.9,3.4,5.1,4.8,,\nLouisiana,\"Louisiana\n(31.312663, -92.445678)\",5.2,5.4,2.8,1.8,8.6,9.4,5.1,5.7,8.300000000000001,9.1,2.4,1.9\nTennessee,\"Tennessee\n(35.680941, -85.774487)\",4.6,4.1,1.6,,8,8.2,4.9,4.1,7.5,6.8,1.8,1.5\nMissouri,\"Missouri\n(38.635791, -92.566299)\",4.8,3.4,1.9,,9.5,6.9,4.4,3.2,7.8,5.6,1.8,1.3\nGeorgia,\"Georgia\n(32.839683, -83.627579)\",3,2.7,1,0.8,5.8,5.2,3.1,2.9,4.9,4.7,1.2,0.9\nTexas,\"Texas\n(31.82724, -99.426768)\",4.9,5.4,2.1,2.3,10,10,4.7,5.3,7.6,8.1,2.4,2.7\nMaine,\"Maine\n(45.254229, -68.985026)\",3.8,3.3,,,,,2.8,3.1,6.6,5.1,,\nMississippi,\"Mississippi\n(32.745513, -89.538027)\",6.1,6,2.6,2.8,12,10.8,5.7,5.8,9.800000000000001,9.4,2.7,2.8\nColorado,\"Colorado\n(38.843843, -106.133609)\",2.5,3,,1.7,5.6,5.6,2,2.6,3.9,4.6,1.1,1.3\nAlabama,\"Alabama\n(32.840572, -86.631857)\",5.5,5.5,2.7,2.1,10.3,10,5,5.5,8.4,8.6,2.9,2.6\nMaryland,\"Maryland\n(39.290583, -76.60926)\",2.7,2.2,1.6,,5.8,5.4,2.2,1.8,4.1,3.5,1.4,0.9\nCalifornia,\"California\n(37.638642, -120.999996)\",2,2.2,0.9,1,4.5,4.6,1.8,2,3.2,3.4,1,1.1\nIdaho,\"Idaho\n(43.682632, -114.363727)\",3.6,3.3,,,8.699999999999999,,2.7,3,5.8,4.8,,\nVermont,\"Vermont\n(43.625384, -72.517637)\",3.4,,,,,,,,,,,\nDistrict of Columbia,\"District of Columbia\n(38.890373, -77.031957)\",,,,,,,,,,,,\nNorth Dakota,\"North Dakota\n(47.475319, -100.118428)\",11.3,7.2,,,15.3,15.2,12,6.1,17.399999999999999,10.7,,\nWisconsin,\"Wisconsin\n(44.393191, -89.816366)\",3.6,2.9,1.6,,6.5,7.5,3.5,2.3,5.6,4.8,1.6,1.2\nOregon,\"Oregon\n(44.56745, -120.155029)\",2.2,2.5,,,5.2,4.2,1.8,2.6,3.1,3.7,1.3,1.4\nHawaii,\"Hawaii\n(21.304852, -157.857748)\",3.8,2.2,,,,,3.2,,5.7,3.6,,\nPennsylvania,\"Pennsylvania\n(40.793734, -77.860697)\",3.3,2.7,1.4,0.7,7.2,5.5,2.8,2.7,5.4,4.4,1.3,1.1\nArizona,\"Arizona\n(34.865974, -111.763807)\",3.6,3,1.6,,6.9,5.5,3.3,3.1,5.4,4.5,1.7,1.5\nWashington,\"Washington\n(47.522288, -120.470028)\",2.1,1.9,,,4,3.4,2,1.9,3.6,2.9,0.7,0.9\nUnited States,\"United States\n(39.759996, -98.499999)\",3.3,3.1,1.3,1.2,6.7,6.2,3.1,3,5.2,4.9,1.5,1.4\nAlaska,\"Alaska\n(64.845078, -147.72206)\",,2.8,,,,,,,,,,\nNew York,\"New York\n(42.827004, -75.543966)\",1.7,1.6,0.6,0.7,3.3,3,1.7,1.5,2.7,2.4,0.8,0.8\nIllinois,\"Illinois\n(40.485012, -88.997709)\",2.5,2.4,0.7,0.7,6,5.5,2.1,2.2,4,3.7,1,1.3\nSouth Carolina,\"South Carolina\n(33.998822, -81.045366)\",7.6,5.8,2.8,2,14.2,12.4,7.6,5.3,12.3,9,3.2,2.9\nIndiana,\"Indiana\n(39.766913, -86.149956)\",3.6,3.2,1.2,,7.2,6.3,3.5,3.2,6,5.1,1.3,1.3\nUtah,\"Utah\n(39.360701, -111.587128)\",1.2,2,,,,,1.9,2.3,1.7,3,,\nNebraska,\"Nebraska\n(41.641044, -99.365719)\",4,3.3,,,6.5,7,3.5,3,6.4,5,,\nMassachusetts,\"Massachusetts\n(42.276874, -72.082687)\",1.8,1.9,,,3.3,4,1.7,1.8,2.7,3.1,0.9,0.9\nMontana,\"Montana\n(47.066528, -109.424416)\",9.4,7.3,,,21.4,15.4,7.2,6.9,14.9,10.2,4,4.3\nNew Mexico,\"New Mexico\n(34.520881, -106.240578)\",4.8,5.7,,,9.1,11.2,4.5,5.1,6.9,8.6,2.9,2.8\nNew Jersey,\"New Jersey\n(40.130571, -74.273688)\",1.8,1.8,,,4.6,3.6,1.4,1.7,2.9,2.9,0.9,0.8\nWyoming,\"Wyoming\n(43.235541, -108.109827)\",7.1,8.2,,,17.3,,,8.1,11.3,13.1,,\nNorth Carolina,\"North Carolina\n(35.46622, -79.15925)\",4.2,3.8,1.7,1.4,8,7.7,4,3.6,6.8,6.3,1.7,1.5\nOhio,\"Ohio\n(40.060212, -82.404257)\",3.5,2.7,1.2,0.8,6.8,5.6,3.3,2.6,5.5,4.2,1.6,1.3\nDelaware,\"Delaware\n(39.008834, -75.577736)\",3.8,5.2,,,,11.7,4,4.6,6.6,7.4,,\nKansas,\"Kansas\n(38.347743, -98.200778)\",3.4,3.6,2.3,,6,7.4,3,3.3,6,5.8,,1.4\nFlorida,\"Florida\n(28.932043, -81.928958)\",3.7,3.5,1.2,1.2,8,7.4,3.3,3.1,5.7,5.4,1.7,1.7\nNew Hampshire,\"New Hampshire\n(43.655953, -71.500357)\",2.4,2.4,,,,,2.9,,4.1,3.2,,\nMinnesota,\"Minnesota\n(46.355649, -94.7942)\",2.1,1.9,,,3.7,3.5,2.2,2.1,3.2,3,1.2,0.9\nArkansas,\"Arkansas\n(34.74865, -92.27449)\",5.1,4.6,,,10.5,6.3,4.3,5.4,8.1,7.2,2.2,2.2\nMichigan,\"Michigan\n(44.661322, -84.714386)\",2.7,2.2,1.1,1,6.8,5.1,2,1.8,4.3,3.3,1.2,1.1\nRhode Island,\"Rhode Island\n(41.708281, -71.522466)\",2.3,,,,,,,,,,,\nNevada,\"Nevada\n(39.493242, -117.071839)\",2.8,3.3,,,4.6,6.4,3.2,2.7,4.2,4.9,1.4,1.7\n", "type": "text"}]